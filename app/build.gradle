apply plugin: 'com.android.application'
apply plugin: 'jacoco'


def globalConf = rootProject.ext

archivesBaseName = 'app'
group = globalConf.group
version = globalConf.version

android {
    compileSdkVersion = rootProject.compileSdkVersion

    signingConfigs {
        release {
            /*storeFile file(RELEASE_STORE_FILE)
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")*/
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    defaultConfig {
        applicationId globalConf.applicationId
        versionCode globalConf.versionCode
        versionName globalConf.versionName
        targetSdkVersion globalConf.targetSdkVersion
        minSdkVersion globalConf.minSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "Formic Desarrollo"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            applicationIdSuffix ".debug"
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
        release {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Formic"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.txt'
        }
    }
    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                jacoco {
                    includeNoLocationClasses = true
                    excludes = ['jdk.internal.*']
                }
            }
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/INDEX.LIST']
        }
    }
//    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
    lint {
        abortOnError false
        disable 'InvalidPackage'
    }
    namespace 'es.jcyl.ita.formic'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(project(':core')) {
        exclude group: 'commons-logging'
    }
    implementation(project(':repo')) {
        exclude group: 'commons-logging'
    }
    implementation(project(':forms')) {
        exclude group: 'commons-logging'
    }
    implementation(project(':jobs')) {
        exclude group: 'commons-logging'
    }

    /*implementation(project(':sharedTest')) {
        exclude group: 'commons-logging'
    }*/


    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.activity:activity:1.2.0-alpha06"
    implementation "androidx.fragment:fragment:1.3.0-alpha06"
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.dagger:dagger:2.26'

    /////////////////////////////////////
    // Instrumentation test dependencies
    /////////////////////////////////////
    // Core library
    androidTestImplementation "androidx.test:core:${androidTestVersion}"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation("androidx.test:runner:${androidTestVersion}") {
        exclude group: 'net.sf.kxml', module: ''
    }
    androidTestImplementation("androidx.test:rules:${androidTestVersion}") {
        exclude group: 'androidx.test', module: ''
    }
    debugImplementation "androidx.test:monitor:1.6.0"
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.ext:truth:${androidTestVersion}"
    androidTestImplementation 'com.google.truth:truth:0.46'
    // Espresso dependencies
    androidTestImplementation("androidx.test.espresso:espresso-core:${espressoVersion}") {
        exclude group: 'androidx.test', module: 'runner'
    }

    androidTestImplementation 'org.mockito:mockito-android:4.1.0'

    /////////////////////////////////////
    // JUnit test dependencies
    /////////////////////////////////////
    testImplementation project(':repoTestUtils')
    testImplementation unitTestDeps
    //noinspection FragmentGradleConfiguration
    testImplementation 'androidx.fragment:fragment-testing:1.2.4'
    testImplementation "androidx.test:core:${androidTestVersion}"
    testImplementation("androidx.test:rules:${androidTestVersion}") {
        exclude group: 'androidx.test', module: ''
    }
}

// Excluir logback en los test unitarios
configurations.testImplementation {
    exclude module: 'logback-android'
}

