apply plugin: 'com.android.application'
apply plugin: 'jacoco'


def globalConf = rootProject.ext

archivesBaseName = 'app'
group = globalConf.group
version = globalConf.version

android {

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
            /*storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD*/
        }
    }

    compileSdkVersion = rootProject.compileSdkVersion
    buildToolsVersion = rootProject.buildToolsVersion

    defaultConfig {
        applicationId globalConf.applicationId
        versionCode globalConf.versionCode
        versionName globalConf.versionName
        targetSdkVersion globalConf.targetSdkVersion
        minSdkVersion globalConf.minSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //multiDexEnabled true
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                if (outputFileName.endsWith('.apk')) {
                    outputFileName = "${globalConf.artifactId}_${output.baseName}_${variant.versionName}.apk"
                }

                if (outputFileName.endsWith('.aab')) {
                    outputFileName = "${globalConf.artifactId}_${output.baseName}_${variant.versionName}.aab"
                }
            }
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "Formic Desarrollo"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.txt'
            applicationIdSuffix ".debug"
            testCoverageEnabled true
        }
        release {
            signingConfig signingConfigs.release
            resValue "string", "app_name", "Formic"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.txt'
        }
    }

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
        // lint sees references in the grooid jar to unavailable java classes
    }
    dexOptions {
        // http://developer.android.com/intl/es/tools/building/building-studio.html#instant-run
        //preDexLibraries true
        maxProcessCount 4
        javaMaxHeapSize "2g"
        jumboMode = true
    }
//    dataBinding {
//        enabled = true
//    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                jacoco{
                    includeNoLocationClasses = true
                    excludes = ['jdk.internal.*']
                }
            }
        }
    }
//    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':core')
    implementation project(':repo')
    implementation project(':forms')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.activity:activity:1.2.0-alpha06"
    implementation "androidx.fragment:fragment:1.3.0-alpha06"
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.dagger:dagger:2.26'

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'com.github.tony19:logback-android:2.0.0'

    implementation group: 'com.opencsv', name: 'opencsv', version: '5.2'

    implementation 'com.airbnb.android:paris:1.7.3'

    //implementation 'org.jsoup:jsoup:1.14.3'

    //implementation 'com.opencsv:opencsv:4.1'

    //SLF4J - API
    //implementation 'org.slf4j:slf4j-api:1.7.30'

    //logback
    //implementation 'ch.qos.logback:logback-classic:1.2.3'
    //implementation 'ch.qos.logback:logback-core:1.2.3'


//    implementation('com.google.android.tools:dx:1.7') {
//        exclude group: 'jetified', module: ''
//    }


    /////////////////////////////////////
    // Instrumentation test dependencies
    /////////////////////////////////////

    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation('androidx.test:runner:1.2.0') {
        exclude group: 'net.sf.kxml', module: ''
    }
    androidTestImplementation('androidx.test:rules:1.2.0') {
        exclude group: 'androidx.test', module: ''
    }
    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.46'
    // Espresso dependencies
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0') {
        exclude group: 'androidx.test', module: 'runner'
    }

    /////////////////////////////////////
    // JUnit test dependencies
    /////////////////////////////////////
    testImplementation project(':repoTestUtils')
    testImplementation unitTestDeps
    testImplementation 'androidx.fragment:fragment-testing:1.2.4'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation('androidx.test:rules:1.2.0') {
        exclude group: 'androidx.test', module: ''
    }
}

