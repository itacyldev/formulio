apply plugin: 'jacoco'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        csv.enabled false
        xml.enabled true
        html.enabled true
        xml.destination file("${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
        html.destination file("${buildDir}/reports/jacoco/html")
    }
    // Change as needed
    def fileFilter = ['**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*']


    def coverageMainSrc = [
            "${rootDir}/src/main/java",
    ]

    def coverageDebugTree = [
            fileTree(dir: "${rootDir}/build/classes", excludes: fileFilter),
    ]
    getSourceDirectories().setFrom(files(coverageMainSrc))
    getClassDirectories().setFrom(files(coverageDebugTree))
    executionData.from(fileTree(
            dir: "$buildDir",
            includes: [
                    "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
            ]))
}
