<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.itacyl.es/formic/forms" xmlns="http://www.itacyl.es/formic/forms"
    elementFormDefault="qualified" version="1.0">
    <!-- <xs:include schemaLocation="http://www.itacyl.es/formic/repos.xsd"/> -->
    <xs:include schemaLocation="repos.xsd" />

    <xs:annotation>
        <xs:documentation> ================== Basic Types =================
        </xs:documentation>
    </xs:annotation>
    <xs:simpleType name="URI">
        <xs:annotation>
            <xs:documentation> a Uniform Resource Identifier, see [RFC2396]
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI" />
    </xs:simpleType>

    <xs:simpleType name="StringListType">
        <xs:annotation>
            <xs:documentation> a comma separated list of strings
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:simpleType name="ScriptType">
        <xs:annotation>
            <xs:documentation>Function name or Script expression
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:simpleType name="ColorType">
        <xs:annotation>
            <xs:documentation>RGB color definition
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string" />
    </xs:simpleType>

    <xs:attributeGroup name="scriptHooks">
        <xs:attribute name="onBeforeRender" type="ScriptType" />
        <xs:attribute name="onAfterRender" type="ScriptType" />
    </xs:attributeGroup>

    <xs:attributeGroup name="baseRepoAccessor">
        <xs:annotation>
            <xs:documentation>Attributes for repository componentes...
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="properties" type="xs:string" />
        <xs:attribute name="repo" type="xs:string" />
        <xs:attribute name="dbFile" type="xs:string" />
        <xs:attribute name="dbTable" type="xs:string" />
        <xs:attribute name="allowsPartialRestore" type="xs:boolean" />
    </xs:attributeGroup>

    <xs:attributeGroup name="uiComponentAtts">
        <xs:annotation>
            <xs:documentation>Attributes for UI components...
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="id" type="xs:string" />
        <xs:attribute name="value" type="xs:string" />
        <xs:attribute name="render" type="xs:string" />
        <xs:attribute name="readonly" type="xs:boolean" default="false" />
        <xs:attribute name="readonlyMessage" type="xs:string" />
        <xs:attribute name="onBeforeRender" type="ScriptType" />
        <xs:attribute name="onAfterRender" type="ScriptType" />
        <xs:attribute name="action" type="xs:string" />
        <xs:attribute name="allowsPartialRestore" type="xs:string" />
    </xs:attributeGroup>

    <xs:attributeGroup name="inputAtts">
        <xs:annotation>
            <xs:documentation>Attributes for input components...
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="label" type="xs:string" />
        <xs:attribute name="converter" type="xs:string" />
        <xs:attribute name="inputType" type="xs:string" />
        <xs:attribute name="validator" type="StringListType" />
        <xs:attribute name="placeholder" type="xs:string" />
        <xs:attribute name="hint" type="xs:string" />
        <xs:attribute name="hasDeleteButton" type="xs:boolean" default="true" />
    </xs:attributeGroup>

    <xs:annotation>
        <xs:documentation> ================== UI components =================
        </xs:documentation>
    </xs:annotation>

    <xs:complexType name="uiComponentType">
        <xs:attributeGroup ref="uiComponentAtts" />
    </xs:complexType>

    <xs:element name="uiAbstract" abstract="true" type="uiComponentType" />

    <xs:element name="p" substitutionGroup="uiAbstract">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="uiComponentType">
                    <xs:attribute name="fontSize" type="xs:string" />
                    <xs:attribute name="fontColor" type="ColorType" />
                    <xs:attribute name="fontFamily" type="xs:string" />
                    <xs:attribute name="backgroundColor" type="xs:string" />
                    <xs:attribute name="italic" type="xs:string" />
                    <xs:attribute name="bold" type="xs:string" />
                    <xs:attribute name="uppercase" type="xs:string" />
                    <xs:attribute name="underlined" type="xs:string" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="divisor" substitutionGroup="uiAbstract">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="uiComponentType">
                    <xs:attribute name="color" type="ColorType" />
                    <xs:attribute name="name" type="xs:string" />
                    <xs:attribute name="strokeWidth" type="xs:string" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="link" substitutionGroup="uiAbstract">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="uiComponentType">
                    <xs:attribute name="route" type="xs:string" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="button" substitutionGroup="uiAbstract">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="uiComponentType">
                    <xs:attribute name="route" type="xs:string" />
                    <xs:attribute name="confirmation" type="xs:boolean" default="false" />
                    <xs:attribute name="confirmationLabel" type="xs:string" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="buttonbar" substitutionGroup="uiAbstract">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="button" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="type">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="bottom" />
                        <xs:enumeration value="fab" />
                        <xs:enumeration value="menu" />
                        <xs:enumeration value="default" />
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:annotation>
        <xs:documentation> ================== Input components =================
        </xs:documentation>
    </xs:annotation>
    <xs:complexType name="inputComponentType">
        <xs:complexContent>
            <xs:extension base="uiComponentType">
                <xs:attributeGroup ref="inputAtts" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="inputAbstract" abstract="true" type="inputComponentType" />

    <xs:element name="input">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="inputComponentType">
                    <xs:attribute name="type" use="required" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element name="switcher" type="inputComponentType" />
    <xs:element name="text" type="inputComponentType" />
    <xs:element name="textarea" type="inputComponentType" />

    <xs:element name="date">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="inputComponentType">
                    <xs:attribute name="pattern" type="xs:string" use="optional" />
                    <xs:attribute name="hasTodayButton" type="xs:string" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="datetime" substitutionGroup="date" />

    <xs:element name="option">
        <xs:complexType>
            <xs:attribute name="id" use="optional" type="xs:string" />
            <xs:attribute name="value" use="required" type="xs:string" />
            <xs:attribute name="label" use="optional" type="xs:string" />
        </xs:complexType>
    </xs:element>

    <xs:element name="options">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="option" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="valueProperty" type="xs:string" />
            <xs:attribute name="labelExpression" type="xs:string" />
            <xs:attribute name="labelFilteringProperty" type="xs:string" />
            <xs:attributeGroup ref="scriptHooks" />
        </xs:complexType>
    </xs:element>

    <xs:complexType name="optionsInputType">
        <xs:complexContent>
            <xs:extension base="uiComponentType">
                <xs:sequence>
                    <xs:element ref="options" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="checkbox" type="optionsInputType" />
    <xs:element name="radio">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="optionsInputType">
                    <xs:attribute name="orientation" use="optional" default="horizontal">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="horizontal" />
                                <xs:enumeration value="vertical" />
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="weights" use="optional" type="StringListType" />
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="dynamicOptionsInputType">
        <xs:complexContent>
            <xs:extension base="uiComponentType">
                <xs:attribute name="repo" use="optional" type="xs:string" />
                <xs:attribute name="forceSelection" use="optional" type="xs:boolean" default="true" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="select" type="dynamicOptionsInputType" />
    <xs:element name="autocomplete" type="dynamicOptionsInputType" />

    <xs:annotation>
        <xs:documentation> ================== Group components =================
        </xs:documentation>
    </xs:annotation>

    <xs:complexType name="groupComponentType">
        <xs:complexContent>
            <xs:extension base="uiComponentType">
                <xs:sequence>
                    <xs:element ref="uiAbstract" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:annotation>
        <xs:documentation> ================== ViewControllers =================
        </xs:documentation>
    </xs:annotation>

    <xs:complexType name="viewType">
        <xs:attribute name="id" type="xs:string" />
        <xs:attributeGroup ref="baseRepoAccessor" />
    </xs:complexType>

    <xs:complexType name="editViewType">
        <xs:complexContent>
            <xs:extension base="viewType">
                <xs:attribute name="entityList" type="xs:string" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="listViewType">
        <xs:complexContent>
            <xs:extension base="viewType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="main">
        <xs:complexType>
            <xs:all>
                <xs:element name="list" minOccurs="1" maxOccurs="1" type="listViewType" />
                <xs:element name="edit" minOccurs="1" type="editViewType" />
                <xs:element name="view" minOccurs="1" type="viewType" />
            </xs:all>
        </xs:complexType>
    </xs:element>

</xs:schema>